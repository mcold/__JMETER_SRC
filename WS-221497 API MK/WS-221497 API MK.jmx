<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="WS CYCLE" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="IP" elementType="Argument">
            <stringProp name="Argument.name">IP</stringProp>
            <stringProp name="Argument.value">${__P(IP, 192.168.16.206)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(PORT, 7902)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">${__P(URL, service)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="db_ip" elementType="Argument">
            <stringProp name="Argument.name">db_ip</stringProp>
            <stringProp name="Argument.value">${__P(DB_IP, 192.168.17.100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="db_port" elementType="Argument">
            <stringProp name="Argument.name">db_port</stringProp>
            <stringProp name="Argument.value">${__P(DB_PORT, 1521)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="service_name" elementType="Argument">
            <stringProp name="Argument.name">service_name</stringProp>
            <stringProp name="Argument.value">${__P(SERVICE_NAME, db)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Amount" elementType="Argument">
            <stringProp name="Argument.name">Amount</stringProp>
            <stringProp name="Argument.value">${__P(AMOUNT, 50000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Fee" elementType="Argument">
            <stringProp name="Argument.name">Fee</stringProp>
            <stringProp name="Argument.value">${__P(FEE, 100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Comment" elementType="Argument">
            <stringProp name="Argument.name">Comment</stringProp>
            <stringProp name="Argument.value">TEST</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BLOCKED_1" elementType="Argument">
            <stringProp name="Argument.name">BLOCKED_1</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="SMP DB CONNECT" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">SMP</stringProp>
        <stringProp name="dbUrl">${__P(DATABASE_URL)}</stringProp>
        <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${__P(DB_PASSWORD)}</stringProp>
        <stringProp name="poolMax">5</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${__P(DB_SCHEMA)}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="GET MAX PcTransId" enabled="true">
        <stringProp name="dataSource">SMP</stringProp>
        <stringProp name="query">SELECT MAX(TR.PC_TRANS_ID) AS PC_MAX_ID
  FROM T_TRANSACTION TR</stringProp>
        <stringProp name="queryArguments"></stringProp>
        <stringProp name="queryArgumentsTypes"></stringProp>
        <stringProp name="queryTimeout"></stringProp>
        <stringProp name="queryType">Select Statement</stringProp>
        <stringProp name="resultSetHandler">Store as String</stringProp>
        <stringProp name="resultSetMaxRows"></stringProp>
        <stringProp name="resultVariable"></stringProp>
        <stringProp name="variableNames">PC_MAX_ID</stringProp>
      </JDBCPreProcessor>
      <hashTree/>
      <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="TRANSLATE MAX" enabled="true">
        <stringProp name="scriptLanguage">groovy</stringProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="cacheKey">false</stringProp>
        <stringProp name="script">String max_id = vars.get(&quot;PC_MAX_ID_1&quot;);
int next_id = max_id.toInteger();
props.put(&quot;PcTransIdMAX&quot;, next_id.toString());</stringProp>
      </JSR223PreProcessor>
      <hashTree/>
      <com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup" testname="CYCLE" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__P(THREADS, 3)}</stringProp>
        <stringProp name="RampUp">${__P(RAMP_UP_SEC, 60)}</stringProp>
        <stringProp name="Steps">${__P(RAMP_UP_CNT, 3)}</stringProp>
        <stringProp name="Hold">${__P(HOLD_RATE_SEC, 0)}</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="ConcurrencyLimit"></stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="GLOBAL SET" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="AUTH_RESULT" elementType="Argument">
              <stringProp name="Argument.name">AUTH_RESULT</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="T CYCLE" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="DEFAULT HTTP REQUEST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${IP}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${url}</stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="GET PcTransId" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">String max_id = props.get(&quot;PcTransIdMAX&quot;);
int pc_trans_id = max_id.toInteger() + ${__threadNum};
vars.put(&quot;PcTransId&quot;, pc_trans_id.toString());

</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="GET RANDOM DATA" enabled="true">
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;

//ПЦ
List pc_lines = FileUtils.readLines(new File(&quot;D:/ProtiIes/Holodnuk-M/Documents/WORK DIRS/JMETER/WS-221497 API MK/DATA/PC.csv&quot;));
int pc_random = new Random().nextInt(pc_lines.size());
String pc_line = pc_lines.get(pc_random);
String pc_id = pc_line.split(&quot;;&quot;)[0];
String UserName = pc_line.split(&quot;;&quot;)[1];
String Password = pc_line.split(&quot;;&quot;)[2];
String ConfigNotif = pc_line.split(&quot;;&quot;)[3];


vars.put(&quot;UserName&quot;, UserName);
vars.put(&quot;Password&quot;, Password);
vars.put(&quot;ConfigNotif&quot;, ConfigNotif);



// продукт
List g_lines = FileUtils.readLines(new File(&quot;D:/ProtiIes/Holodnuk-M/Documents/WORK DIRS/JMETER/WS-221497 API MK/DATA/GOOD_&quot; + pc_id + &quot;.csv&quot;));
int g_random = new Random().nextInt(g_lines.size());
String g_line = g_lines.get(g_random);

String good_id = g_line.split(&quot;;&quot;)[0];
String src_payment = g_line.split(&quot;;&quot;)[1];


vars.put(&quot;ProductID&quot;, good_id); 
vars.put(&quot;SourcePayment&quot;, src_payment);


// MSISDN
//List ms_lines = FileUtils.readLines(new File(&quot;MSISDN.csv&quot;));
//int ms_random = new Random().nextInt(ms_lines.size());
//String msisdn = ms_lines.get(ms_random);
//
//vars.put(&quot;MSISDN&quot;, msisdn);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="PROVE" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InitPayment" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:oper=&quot;https://www.tele2.ru/OperatorService/&quot;&gt;&#xd;
&lt;soapenv:Header/&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;oper:InitPayment&gt;&#xd;
		&lt;oper:UserName&gt;${UserName}&lt;/oper:UserName&gt;&#xd;
		&lt;oper:Password&gt;${Password}&lt;/oper:Password&gt;&#xd;
		&lt;oper:Phone&gt;${__P(MSISDN, 79539965291)}&lt;/oper:Phone&gt;&#xd;
		&lt;oper:ProductId&gt;${ProductID}&lt;/oper:ProductId&gt;&#xd;
		&lt;oper:PctransId&gt;${PcTransId}&lt;/oper:PctransId&gt;&#xd;
		&lt;oper:Amount&gt;${Amount}&lt;/oper:Amount&gt;&#xd;
		&lt;oper:Fee&gt;${Fee}&lt;/oper:Fee&gt;&#xd;
		&lt;oper:SourcePayment&gt;${SourcePayment}&lt;/oper:SourcePayment&gt;&#xd;
		&lt;oper:Comment&gt;TEST&lt;/oper:Comment&gt;&#xd;
		&lt;oper:recurrentId&gt;${__P(TYPE_REC)}&lt;/oper:recurrentId&gt;&#xd;
		&lt;/oper:InitPayment&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${url}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET RESULT" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">INIT_RESULT</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//Result</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET STATUS" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">PAY_STATUS</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//Status</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET PAY_ID" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">PAY_ID</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//Id</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ASSERT RESULT" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49">1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">ERROR INITPAYMENT</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">INIT_RESULT</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="IF ConfigNotif" enabled="true">
              <stringProp name="IfController.condition">${ConfigNotif}==1</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NotifSubscriber" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:oper=&quot;https://www.tele2.ru/OperatorService/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;oper:NotifSubscriber&gt;&#xd;
         &lt;oper:UserName&gt;${UserName}&lt;/oper:UserName&gt;&#xd;
         &lt;oper:Password&gt;${Password}&lt;/oper:Password&gt;&#xd;
         &lt;oper:Phone&gt;${MSISDN}&lt;/oper:Phone&gt;&#xd;
         &lt;oper:Id&gt;${PAY_ID}&lt;/oper:Id&gt;&#xd;
      &lt;/oper:NotifSubscriber&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/${url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ASSERT RESULT" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="56">8</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message">ERROR NOTIF SUBSCRIBER</stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">12</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">INIT_RESULT</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="false">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <url>true</url>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NotifSubscriberApproval" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
	xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
	xmlns:oper=&quot;https://www.mobi-money.ru/OperatorService/&quot;&gt;&#xd;
	&lt;soapenv:Header/&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;oper:NotifSubscriberApproval&gt;&#xd;
			&lt;Phone&gt;${MSISDN}&lt;/Phone&gt;&#xd;
			&lt;PctransId&gt;${PctransId}&lt;/PctransId&gt;&#xd;
			&lt;Id&gt;${PAY_ID}&lt;/Id&gt;&#xd;
			&lt;Result&gt;1&lt;/Result&gt;&#xd;
			&lt;Comment&gt;Абонент подтвердил заказ услуги (товара)&lt;/Comment&gt;&#xd;
		&lt;/oper:NotifSubscriberApproval&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/${url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ASSERT RESULT" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="48">0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message">ERROR NOTIF SUBSCRIBER APPROVAL</stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">8</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">INIT_RESULT</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="WHILE BLOCKED" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(parseInt(vars.get(&quot;BLOCKED_1&quot;))!=0)}

</stringProp>
              </WhileController>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                  <stringProp name="dataSource">SMP</stringProp>
                  <stringProp name="query">SELECT COUNT(*)
  FROM T_SUBS_BLOCK TSB
  WHERE TSB.MSISDN = ${__P(MSISDN)}
    --AND TSB.ACTION_ID = 1</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">BLOCKED</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                  <stringProp name="dataSource">SMP</stringProp>
                  <stringProp name="query">UPDATE T_TRANSACTION TR
  SET STATUS_ID = 503
 WHERE TR.PAY_ID = ${PAY_ID}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">TRANS_STATUS</stringProp>
                </JDBCSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET OctoPerf" enabled="false">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">octoperf.com</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="false">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <url>true</url>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="WHILE AUTH RESULT" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(parseInt(vars.get(&quot;AUTH_RESULT&quot;)) &lt; 2)}

</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AuthorizePayment" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:oper=&quot;https://www.mobi-money.ru/OperatorService/&quot;&gt; &#xd;
	&lt;soapenv:Header/&gt; &#xd;
	&lt;soapenv:Body&gt; &#xd;
		&lt;oper:AuthorizePayment&gt; &#xd;
		&lt;oper:UserName&gt;${UserName}&lt;/oper:UserName&gt; &#xd;
		&lt;oper:Password&gt;${Password}&lt;/oper:Password&gt; &#xd;
		&lt;oper:Id&gt;${PAY_ID}&lt;/oper:Id&gt; &#xd;
		&lt;/oper:AuthorizePayment&gt; &#xd;
	&lt;/soapenv:Body&gt; &#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path"></stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET RESULT" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">AUTH_RESULT</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">//Result</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">false</boolProp>
                </XPathExtractor>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET REC_ID" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">RECURRENT_ID</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">//RecurrentId</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">false</boolProp>
                </XPathExtractor>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="false">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <url>true</url>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                <stringProp name="dataSource">SMP</stringProp>
                <stringProp name="query">UPDATE T_TRANSACTION TR
  SET STATUS_ID = 503
 WHERE TR.PAY_ID = ${PAY_ID}</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">TRANS_STATUS</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CheckPaymentStatus" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:oper=&quot;https://www.mobi-money.ru/OperatorService/&quot;&gt; &#xd;
&lt;soapenv:Header/&gt; &#xd;
	&lt;soapenv:Body&gt; &#xd;
		&lt;oper:CheckPaymentStatus&gt; &#xd;
		&lt;oper:UserName&gt;${UserName}&lt;/oper:UserName&gt; &#xd;
		&lt;oper:Password&gt;${Password}&lt;/oper:Password&gt; &#xd;
		&lt;oper:Id&gt;${PAY_ID}&lt;/oper:Id&gt; &#xd;
		&lt;/oper:CheckPaymentStatus&gt; &#xd;
	&lt;/soapenv:Body&gt; &#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${url}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET RESULT" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">CHECK_RESULT</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//Result</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ASSERT RESULT" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51">3</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">ERROR CHECK PAYMENT STATUS</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CHECK_RESULT</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="IF REC" enabled="true">
              <stringProp name="IfController.condition">${TYPE_REC} == &apos;2&apos;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CancelRecurrent" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:oper=&quot;https://www.tele2.ru/OperatorService/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;oper:CancelRecurrent&gt;&#xd;
         &lt;oper:userName&gt;${UserName}&lt;/oper:userName&gt;&#xd;
         &lt;oper:password&gt;${Password}&lt;/oper:password&gt;&#xd;
         &lt;oper:msisdn&gt;${MSISDN}&lt;/oper:msisdn&gt;&#xd;
         &lt;oper:RecurrentList&gt;    &#xd;
            &lt;oper:RecurrentId&gt;${RECURRENT_ID}&lt;/oper:RecurrentId&gt;        &#xd;
         &lt;/oper:RecurrentList&gt;&#xd;
      &lt;/oper:CancelRecurrent&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/${url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="GET RESULT" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">CANCEL_RESULT</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">//Result</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">false</boolProp>
                </XPathExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ASSERT RESULT" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1599">21</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message">ERROR CANCEL RECURRENT</stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">12</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">INIT_RESULT</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="false">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <url>true</url>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="graphiteMetricsSender" elementType="Argument">
                  <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
                  <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="graphiteHost" elementType="Argument">
                  <stringProp name="Argument.name">graphiteHost</stringProp>
                  <stringProp name="Argument.value">127.0.0.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="graphitePort" elementType="Argument">
                  <stringProp name="Argument.name">graphitePort</stringProp>
                  <stringProp name="Argument.value">2003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rootMetricsPrefix" elementType="Argument">
                  <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
                  <stringProp name="Argument.value">jmeter.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="summaryOnly" elementType="Argument">
                  <stringProp name="Argument.name">summaryOnly</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="samplersList" elementType="Argument">
                  <stringProp name="Argument.name">samplersList</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="percentiles" elementType="Argument">
                  <stringProp name="Argument.name">percentiles</stringProp>
                  <stringProp name="Argument.value">90;95;99</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
          </BackendListener>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT TREE" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="DEBUG" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="DEBUG" enabled="true">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySamplerProperties">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugPostProcessor>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.dbmon.DbMonCollector guiclass="kg.apc.jmeter.vizualizers.DbMonGui" testclass="kg.apc.jmeter.dbmon.DbMonCollector" testname="DB METRICS" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">D:\ProtiIes\Holodnuk-M\Documents\WORK DIRS\JMETER\WS-221497 API MK\METRICS\STAT.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="samplers">
          <collectionProp name="-683253188">
            <stringProp name="82230">SMP</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="1237">false</stringProp>
            <stringProp name="866277958">SELECT round(h.value, 2)   FROM v$sysmetric_history h  WHERE metric_name = &apos;Host CPU Utilization (%)&apos;    and h.BEGIN_TIME &gt; sysdate - 1/24/60/2</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">grant select on v_$sysmetric_history to SMP_T2_RUS;</stringProp>
      </kg.apc.jmeter.dbmon.DbMonCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="RESULT" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
